package fiji.plugin.imaging_fcs.imfcs.controller;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.function.Consumer;

/**
 * A utility class providing static methods for controller operations
 * in the imaging FCS plugin. This class primarily focuses on simplifying
 * the interaction with JComboBox components within the UI.
 */
public final class ControllerUtils {
    // Private constructor to prevent instantiation of utility class.
    private ControllerUtils() {
    }

    /**
     * Retrieves the selected item from a JComboBox following an ActionEvent.
     * This method is typically used within action listeners attached to JComboBox
     * components to easily fetch the selected value.
     *
     * @param ev the ActionEvent generated by the JComboBox interaction.
     * @return the String representation of the selected item. Returns an empty
     * string if no item is selected or if the combo box is null.
     * @throws ClassCastException if the event source isn't a JComboBox<String>.
     */
    @SuppressWarnings("unchecked")
    public static String getComboBoxSelectionFromEvent(ActionEvent ev) {
        JComboBox<String> comboBox = (JComboBox<String>) ev.getSource();
        Object selectedItem = comboBox.getSelectedItem();
        if (selectedItem == null) {
            return "";
        } else {
            return selectedItem.toString();
        }
    }

    /**
     * Creates and returns an ActionListener that updates a given property
     * based on the selected value of a JComboBox. This is generic so it can
     * handle combo boxes of Strings, enums, or any other type T.
     *
     * @param setter A Consumer accepting the combo box's selected item.
     * @return an ActionListener that, when triggered, calls the setter with
     * the current selection of the JComboBox.
     */
    @SuppressWarnings("unchecked")
    public static <T> ActionListener updateComboBoxValue(Consumer<T> setter) {
        return (ActionEvent ev) -> {
            JComboBox<T> comboBox = (JComboBox<T>) ev.getSource();
            T selectedItem = (T) comboBox.getSelectedItem();
            setter.accept(selectedItem);
        };
    }
}
